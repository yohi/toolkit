[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "coderabbit-comment-fetcher"
version = "0.1.0"
description = "CodeRabbit コメント取得・分析ツール"
authors = [
    {name = "y_ohi", email = "y_ohi@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["coderabbit", "github", "pull-request", "review", "analysis"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    # コア依存関係
    "psutil>=5.9.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    
    # HTTP/API クライアント
    "aiohttp>=3.8.0",
    "requests>=2.28.0",
    
    # Web ダッシュボード
    "flask>=2.3.0",
    "flask-socketio>=5.3.0",
    
    # 非同期処理・並行処理
    "asyncio-throttle>=1.0.0",
    
    # キャッシュ（オプション）
    "redis>=4.0.0; extra == 'redis'",
    
    # AI/ML機能（オプション）
    "openai>=1.0.0; extra == 'ai'",
    "anthropic>=0.7.0; extra == 'ai'",
    
    # データ処理
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
# 開発用依存関係
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
]

# Redis キャッシュサポート
redis = [
    "redis>=4.0.0",
]

# AI機能サポート
ai = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
]

# 全ての機能
all = [
    "redis>=4.0.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
]

[project.scripts]
crf = "coderabbit_fetcher.cli.main:main"

[project.urls]
Homepage = "https://github.com/yohi/coderabbit-comment-fetcher"
Repository = "https://github.com/yohi/coderabbit-comment-fetcher"
Issues = "https://github.com/yohi/coderabbit-comment-fetcher/issues"

[tool.setuptools]
packages = ["coderabbit_fetcher"]

[tool.setuptools.package-dir]
"" = "."

[tool.setuptools.package-data]
coderabbit_fetcher = [
    "templates/*.py",
    "config/*.py",
]

# 開発ツール設定
[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # 除外するディレクトリ
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=coderabbit_fetcher --cov-report=term-missing"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
asyncio_mode = "auto"

[tool.ruff]
target-version = "py38"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # imported but unused