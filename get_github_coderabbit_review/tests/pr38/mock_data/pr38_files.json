[{"sha":"691778b81f7a960e23b0fbf37500907a61510dfe","filename":"claude/claude-settings.json","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/yohi/dots/blob/dea6563f450920c2bf91c3c8c044ce129e7b511f/claude%2Fclaude-settings.json","raw_url":"https://github.com/yohi/dots/raw/dea6563f450920c2bf91c3c8c044ce129e7b511f/claude%2Fclaude-settings.json","contents_url":"https://api.github.com/repos/yohi/dots/contents/claude%2Fclaude-settings.json?ref=dea6563f450920c2bf91c3c8c044ce129e7b511f","patch":"@@ -1,4 +1,8 @@\n {\n   \"output_language\": \"ja\",\n-  \"opt_out\": true\n+  \"opt_out\": true,\n+  \"statusLine\": {\n+    \"type\": \"command\",\n+    \"command\": \"~/.claude/statusline.sh\"\n+  }\n }"},{"sha":"ec7251e9ab41157c8eff1556ce2206644045d9ee","filename":"claude/statusline.sh","status":"added","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/yohi/dots/blob/dea6563f450920c2bf91c3c8c044ce129e7b511f/claude%2Fstatusline.sh","raw_url":"https://github.com/yohi/dots/raw/dea6563f450920c2bf91c3c8c044ce129e7b511f/claude%2Fstatusline.sh","contents_url":"https://api.github.com/repos/yohi/dots/contents/claude%2Fstatusline.sh?ref=dea6563f450920c2bf91c3c8c044ce129e7b511f","patch":"@@ -0,0 +1,7 @@\n+#!/bin/bash\n+\n+# Add bun to the PATH\n+export PATH=\"/home/y_ohi/.bun/bin:$PATH\"\n+\n+# Execute the ccusage command\n+bun x ccusage statusline --visual-burn-rate emoji"},{"sha":"ed2ca86e253b484567b4175b1501fdec4e8d7a32","filename":"mk/help.mk","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/yohi/dots/blob/dea6563f450920c2bf91c3c8c044ce129e7b511f/mk%2Fhelp.mk","raw_url":"https://github.com/yohi/dots/raw/dea6563f450920c2bf91c3c8c044ce129e7b511f/mk%2Fhelp.mk","contents_url":"https://api.github.com/repos/yohi/dots/contents/mk%2Fhelp.mk?ref=dea6563f450920c2bf91c3c8c044ce129e7b511f","patch":"@@ -24,6 +24,8 @@ help:\n \t@echo \"  make install-packages-mysql-workbench - MySQL Workbenchをインストール\"\n \t@echo \"  make install-packages-chrome-beta     - Google Chrome Betaをインストール\"\n \t@echo \"  make install-packages-playwright      - Playwright E2Eテストフレームワークをインストール\"\n+\t@echo \"  make install-packages-gemini-cli      - Gemini CLIをインストール\"\n+\t@echo \"  make install-packages-ccusage         - ccusage (bunx) をインストール\"\n \t@echo \"\"\n \t@echo \"⚙️  設定ファイル・コンフィグのセットアップ:\"\n \t@echo \"  make setup-config-vim                 - VIMの設定をセットアップ\""},{"sha":"deeb2bb371c080516ca471a211faa66006d0c098","filename":"mk/install.mk","status":"modified","additions":26,"deletions":6,"changes":32,"blob_url":"https://github.com/yohi/dots/blob/dea6563f450920c2bf91c3c8c044ce129e7b511f/mk%2Finstall.mk","raw_url":"https://github.com/yohi/dots/raw/dea6563f450920c2bf91c3c8c044ce129e7b511f/mk%2Finstall.mk","contents_url":"https://api.github.com/repos/yohi/dots/contents/mk%2Finstall.mk?ref=dea6563f450920c2bf91c3c8c044ce129e7b511f","patch":"@@ -1384,6 +1384,22 @@ install-packages-claude-ecosystem: install-claude-ecosystem\n install-packages-cica-fonts: install-cica-fonts\n install-packages-mysql-workbench: install-mysql-workbench\n install-packages-playwright: install-playwright\n+install-packages-gemini-cli: install-gemini-cli\n+\n+# ccusageのインストール\n+install-packages-ccusage:\n+\t@echo \"📦 ccusage をインストールしています...\"\n+\t@if ! command -v bun >/dev/null 2>&1; then \\\n+\t\techo \"bun が見つからないため、インストールします...\"; \\\n+\t\tcurl -fsSL https://bun.sh/install | bash; \\\n+\t\texport PATH=\"$(HOME)/.bun/bin:$PATH\"; \\\n+\t\tif ! command -v bun >/dev/null 2>&1; then \\\n+\t\t\techo \"❌ bun のインストールに失敗しました。PATHを確認してください。\"; \\\n+\t\t\texit 1; \\\n+\t\tfi \\\n+\tfi\n+\t@bun install -g ccusage\n+\t@echo \"✅ ccusage のインストールが完了しました。\"\n \n # 追加のブラウザインストール系\n install-packages-chrome-beta:\n@@ -1424,6 +1440,9 @@ install-packages-vscode-supercopilot:\n # 後方互換性のためのエイリアス\n install-vscode-supercopilot: install-packages-vscode-supercopilot\n \n+# ccusage の後方互換エイリアス\n+install-ccusage: install-packages-ccusage\n+\n # SuperCursor (Cursor Framework) のインストール\n install-supercursor:\n \t@echo \"🚀 SuperCursor (Cursor Framework) のインストールを開始...\"\n@@ -1809,9 +1828,10 @@ shutdown-system:\n \t@echo \"⏹️ システムをシャットダウンしようとしています...\"\n \t@echo \"⚠️  この操作により、すべての未保存の作業が失われます。\"\n \t@read -p \"本当にシステムをシャットダウンしますか? (y/N): \" confirm; \\\n-\tif [ \"$$confirm\" = \"y\" ] || [ \"$$confirm\" = \"Y\" ]; then \\\n-\t\techo \"システムをシャットダウンします...\"; \\\n-\t\tsudo shutdown now; \\\n-\telse \\\n-\t\techo \"シャットダウンをキャンセルしました。\"; \\\n-\tfi\n+\t\t\tif [ \"$$confirm\" = \"y\" ] || [ \"$$confirm\" = \"Y\" ]; then \\\n+\t\t\t\techo \"システムをシャットダウンします...\"; \\\n+\t\t\t\tsudo shutdown now; \\\n+\t\t\telse \\\n+\t\t\t\techo \"シャットダウンをキャンセルしました。\"; \\\n+\t\t\tfi\n+"},{"sha":"70d1c0eba32ac357a09a48005668277dd6b142ae","filename":"mk/setup.mk","status":"modified","additions":28,"deletions":64,"changes":92,"blob_url":"https://github.com/yohi/dots/blob/dea6563f450920c2bf91c3c8c044ce129e7b511f/mk%2Fsetup.mk","raw_url":"https://github.com/yohi/dots/raw/dea6563f450920c2bf91c3c8c044ce129e7b511f/mk%2Fsetup.mk","contents_url":"https://api.github.com/repos/yohi/dots/contents/mk%2Fsetup.mk?ref=dea6563f450920c2bf91c3c8c044ce129e7b511f","patch":"@@ -530,43 +530,42 @@ setup-config-lazygit: setup-lazygit\n # Claude Code設定のセットアップ\n # ========================================\n \n-setup-claude: ## Claude Code設定ファイルのセットアップ\n+setup-claude:\n \t@echo \"🤖 Claude Code設定をセットアップ中...\"\n+\t@mkdir -p $(HOME_DIR)/.claude\n \n-\t# Claude設定ディレクトリの作成\n-\t@mkdir -p $(HOME_DIR)/.config/claude\n-\n-\t# Claude設定ファイルのコピー\n-\t@if [ -f \"$(DOTFILES_DIR)/claude/claude-settings.json\" ]; then \\\n-\t\techo \"📋 Claude設定ファイルをコピー中...\"; \\\n-\t\tcp \"$(DOTFILES_DIR)/claude/claude-settings.json\" \"$(HOME_DIR)/.config/claude/claude-settings.json\" && \\\n-\t\techo \"✅ Claude設定ファイルが正常にコピーされました\"; \\\n-\telse \\\n-\t\techo \"⚠️ Claude設定ファイルが見つかりません: $(DOTFILES_DIR)/claude/claude-settings.json\"; \\\n+\t# claude-settings.jsonのシンボリックリンク作成\n+\t@echo \"🔗 claude-settings.jsonを~/.claude/settings.jsonにリンク中...\"\n+\t@if [ -f \"$(HOME_DIR)/.claude/settings.json\" ] && [ ! -L \"$(HOME_DIR)/.claude/settings.json\" ]; then \\\n+\t\techo \"⚠️  既存のsettings.jsonをバックアップ中...\"; \\\n+\t\tmv $(HOME_DIR)/.claude/settings.json $(HOME_DIR)/.claude/settings.json.backup.$(date +%Y%m%d_%H%M%S); \\\n \tfi\n+\t@ln -sfn $(DOTFILES_DIR)/claude/claude-settings.json $(HOME_DIR)/.claude/settings.json\n+\t@echo \"✅ settings.jsonがリンクされました\"\n \n-\t# Claude CLIの設定確認\n-\t@if command -v claude >/dev/null 2>&1; then \\\n-\t\techo \"✅ Claude CLIが利用可能です\"; \\\n-\t\techo \"   バージョン: $$(claude --version 2>/dev/null || echo '取得できませんでした')\"; \\\n-\t\techo \"   設定ディレクトリ: $(HOME_DIR)/.config/claude\"; \\\n-\telse \\\n-\t\techo \"ℹ️ Claude CLIがインストールされていません\"; \\\n-\t\techo \"   'make install-claude-ecosystem' でClaude Code関連ツールをインストールできます\"; \\\n+\t# CLAUDE.mdのシンボリックリンク作成\n+\t@echo \"🔗 CLAUDE.mdを~/.claude/CLAUDE.mdにリンク中...\"\n+\t@if [ -f \"$(HOME_DIR)/.claude/CLAUDE.md\" ] && [ ! -L \"$(HOME_DIR)/.claude/CLAUDE.md\" ]; then \\\n+\t\techo \"⚠️  既存のCLAUDE.mdをバックアップ中...\"; \\\n+\t\tmv $(HOME_DIR)/.claude/CLAUDE.md $(HOME_DIR)/.claude/CLAUDE.md.backup.$(date +%Y%m%d_%H%M%S); \\\n \tfi\n+\t@ln -sfn $(DOTFILES_DIR)/claude/CLAUDE.md $(HOME_DIR)/.claude/CLAUDE.md\n+\t@echo \"✅ CLAUDE.mdがリンクされました\"\n \n-\t# CLAUDE.mdファイルのリンク作成\n-\t@if [ -f \"$(DOTFILES_DIR)/claude/CLAUDE.md\" ]; then \\\n-\t\techo \"📖 CLAUDE.mdドキュメントをホームディレクトリにリンク中...\"; \\\n-\t\tln -sf \"$(DOTFILES_DIR)/claude/CLAUDE.md\" \"$(HOME_DIR)/CLAUDE.md\" && \\\n-\t\techo \"✅ CLAUDE.mdドキュメントがリンクされました: ~/CLAUDE.md\"; \\\n-\telse \\\n-\t\techo \"⚠️ CLAUDE.mdドキュメントが見つかりません: $(DOTFILES_DIR)/claude/CLAUDE.md\"; \\\n+\t# statusline.shのシンボリックリンク作成\n+\t@echo \"🔗 statusline.shを~/.claude/statusline.shにリンク中...\"\n+\t@if [ -f \"$(HOME_DIR)/.claude/statusline.sh\" ] && [ ! -L \"$(HOME_DIR)/.claude/statusline.sh\" ]; then \\\n+\t\techo \"⚠️  既存のstatusline.shをバックアップ中...\"; \\\n+\t\tmv $(HOME_DIR)/.claude/statusline.sh $(HOME_DIR)/.claude/statusline.sh.backup.$(date +%Y%m%d_%H%M%S); \\\n \tfi\n+\t@ln -sfn $(DOTFILES_DIR)/claude/statusline.sh $(HOME_DIR)/.claude/statusline.sh\n+\t@chmod +x $(HOME_DIR)/.claude/statusline.sh\n+\t@echo \"✅ statusline.shがリンクされ、実行権限が付与されました\"\n \n-\t@echo \"✅ Claude Code設定のセットアップが完了しました\"\n-\t@echo \"📚 詳細なガイドは ~/CLAUDE.md を参照してください\"\n-\n+\t@echo \"✅ Claude設定が完了しました。\"\n+\t@echo \"   設定ファイル: ~/.claude/settings.json -> $(DOTFILES_DIR)/claude/claude-settings.json\"\n+\t@echo \"   設定ファイル: ~/.claude/CLAUDE.md -> $(DOTFILES_DIR)/claude/CLAUDE.md\"\n+\t@echo \"   スクリプト:   ~/.claude/statusline.sh -> $(DOTFILES_DIR)/claude/statusline.sh\"\n # ========================================\n # 後方互換性のためのエイリアス\n # ========================================\n@@ -577,41 +576,6 @@ setup-claude: ## Claude Code設定ファイルのセットアップ\n # setup-wezterm: は既に実装済み\n # その他の既存ターゲットはそのまま\n \n-# Claude設定をセットアップ\n-setup-claude:\n-\t@echo \"🤖 Claude設定をセットアップ中...\"\n-\t@mkdir -p $(HOME_DIR)/.claude\n-\n-\t# CLAUDE.mdのシンボリックリンク作成\n-\t@if [ -f \"$(DOTFILES_DIR)/claude/CLAUDE.md\" ]; then \\\n-\t\tif [ -f \"$(HOME_DIR)/.claude/CLAUDE.md\" ] && [ ! -L \"$(HOME_DIR)/.claude/CLAUDE.md\" ]; then \\\n-\t\t\techo \"⚠️  既存のCLAUDE.mdをバックアップ中...\"; \\\n-\t\t\tmv $(HOME_DIR)/.claude/CLAUDE.md $(HOME_DIR)/.claude/CLAUDE.md.backup.$$(date +%Y%m%d_%H%M%S); \\\n-\t\tfi; \\\n-\t\techo \"🔗 CLAUDE.mdのシンボリックリンクを作成中...\"; \\\n-\t\tln -sfn $(DOTFILES_DIR)/claude/CLAUDE.md $(HOME_DIR)/.claude/CLAUDE.md && \\\n-\t\techo \"✅ CLAUDE.mdがリンクされました\"; \\\n-\telse \\\n-\t\techo \"⚠️ CLAUDE.mdが見つかりません: $(DOTFILES_DIR)/claude/CLAUDE.md\"; \\\n-\tfi\n-\n-\t# claude-settings.jsonのシンボリックリンク作成\n-\t@if [ -f \"$(DOTFILES_DIR)/claude/claude-settings.json\" ]; then \\\n-\t\tif [ -f \"$(HOME_DIR)/.claude/claude-settings.json\" ] && [ ! -L \"$(HOME_DIR)/.claude/claude-settings.json\" ]; then \\\n-\t\t\techo \"⚠️  既存のclaude-settings.jsonをバックアップ中...\"; \\\n-\t\t\tmv $(HOME_DIR)/.claude/claude-settings.json $(HOME_DIR)/.claude/claude-settings.json.backup.$$(date +%Y%m%d_%H%M%S); \\\n-\t\tfi; \\\n-\t\techo \"🔗 claude-settings.jsonのシンボリックリンクを作成中...\"; \\\n-\t\tln -sfn $(DOTFILES_DIR)/claude/claude-settings.json $(HOME_DIR)/.claude/claude-settings.json && \\\n-\t\techo \"✅ claude-settings.jsonがリンクされました\"; \\\n-\telse \\\n-\t\techo \"⚠️ claude-settings.jsonが見つかりません: $(DOTFILES_DIR)/claude/claude-settings.json\"; \\\n-\tfi\n-\n-\t@echo \"✅ Claude設定が完了しました。\"\n-\t@echo \"   設定ファイル: ~/.claude/CLAUDE.md -> $(DOTFILES_DIR)/claude/CLAUDE.md\"\n-\t@echo \"   設定ファイル: ~/.claude/claude-settings.json -> $(DOTFILES_DIR)/claude/claude-settings.json\"\n-\n \n # Lazygitの設定をセットアップ\n setup-lazygit:"},{"sha":"ad5c4b1e5425aee86ff5f5efa73ed4ace6c1a563","filename":"mk/variables.mk","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/yohi/dots/blob/dea6563f450920c2bf91c3c8c044ce129e7b511f/mk%2Fvariables.mk","raw_url":"https://github.com/yohi/dots/raw/dea6563f450920c2bf91c3c8c044ce129e7b511f/mk%2Fvariables.mk","contents_url":"https://api.github.com/repos/yohi/dots/contents/mk%2Fvariables.mk?ref=dea6563f450920c2bf91c3c8c044ce129e7b511f","patch":"@@ -16,4 +16,5 @@ EMAIL := $(shell git config --global user.email 2>/dev/null || echo \"\")\n         system-setup install-homebrew install-apps install-deb install-flatpak setup-vim setup-zsh setup-wezterm setup-vscode setup-cursor setup-mcp-tools setup-git setup-docker setup-development setup-shortcuts \\\n         setup-gnome-extensions setup-gnome-tweaks backup-gnome-tweaks export-gnome-tweaks setup-all install-cursor update-cursor stop-cursor check-cursor-version install-wezterm install-fuse install-claude-code install-claudia install-superclaude install-claude-ecosystem fix-superclaude install-cica-fonts install-mysql-workbench setup-claude \\\n         setup-mozc setup-mozc-ut-dictionaries setup-mozc-ut-dictionaries-manual \\\n-        fonts-setup fonts-install fonts-install-nerd fonts-install-google fonts-install-japanese fonts-clean fonts-update fonts-list fonts-refresh fonts-debug fonts-backup fonts-configure\n+        fonts-setup fonts-install fonts-install-nerd fonts-install-google fonts-install-japanese fonts-clean fonts-update fonts-list fonts-refresh fonts-debug fonts-backup fonts-configure \\\n+        install-gemini-cli install-packages-ccusage install-ccusage"}]
